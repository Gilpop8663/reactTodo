{"version":3,"sources":["atoms.ts","Components/CreateToDo.tsx","Components/ToDo.tsx","Components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","USERTODOLIST_KEY","userGetTodo","localStorage","getItem","parseTodo","JSON","parse","toDoState","atom","key","default","toDoCate","TO_DO","toDoSelector","selector","get","toDos","toDoCategory","filter","todo","category","Input","styled","input","CreateToDo","toDosSave","useRecoilValue","setToDos","useSetRecoilState","useForm","register","handleSubmit","setValue","setItem","stringify","onSubmit","toDo","oldToDos","id","Date","now","text","action","required","type","placeholder","Button","button","List","li","ToDo","onClick","event","name","currentTarget","findIndex","newToDo","newToDos","splice","className","DOING","DONE","DELETE","slice","Container","div","Form","form","Title","h1","Content","PlusButton","Header","Select","select","ToDoList","useState","addBtn","setAddBtn","useRecoilState","setCategory","value","onInput","map","current","GlobalStyle","createGlobalStyle","App","Helmet","rel","href","integrity","crossOrigin","queryClient","QueryClient","ReactDOM","render","StrictMode","client","theme","bgColor","textColor","accentColor","plusColor","minusColor","document","getElementById"],"mappings":"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","file":"static/js/main.42ce310d.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n  \"DELETE\" = \"DELETE\",\n}\n\nexport const USERTODOLIST_KEY = \"todosAAA\";\n\nexport interface IToDo {\n  id: number;\n  text: string;\n  category: Categories;\n}\n\nconst userGetTodo = localStorage.getItem(USERTODOLIST_KEY);\nconst parseTodo = JSON.parse(userGetTodo as string);\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: userGetTodo !== null ? parseTodo : [],\n});\n\nexport const toDoCate = atom<Categories>({\n  key: \"toDoCate\",\n  default: Categories.TO_DO,\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const toDoCategory = get(toDoCate);\n    return toDos.filter((todo) => todo.category === toDoCategory);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { toDoCate, toDoState, USERTODOLIST_KEY } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nconst Input = styled.input`\n  position: relative;\n  display: block;\n  width: 100%;\n  margin: 0 auto;\n  font-family: \"Open Sans\", \"Helvetica Neue\", \"Segoe UI\", \"Calibri\", \"Arial\",\n    sans-serif;\n  font-size: 18px;\n  color: #60666d;\n`;\n\nfunction CreateToDo() {\n  const toDosSave = useRecoilValue(toDoState);\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(toDoCate);\n  const { register, handleSubmit, setValue } = useForm();\n  const handleVaild = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { id: Date.now(), text: toDo, category },\n      ...oldToDos,\n    ]);\n    //console.log(JSON.stringify(toDosSave));\n    setValue(\"toDo\", \"\");\n  };\n  localStorage.setItem(USERTODOLIST_KEY, JSON.stringify(toDosSave));\n  return (\n    <form onSubmit={handleSubmit(handleVaild)} action=\"\">\n      <Input\n        {...register(\"toDo\", { required: \"Please write a To Do\" })}\n        type=\"text\"\n        placeholder=\"write your to do\"\n      />\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import React, { useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, IToDo, toDoState } from \"../atoms\";\n\n// const Button = styled.button<{ isDone: boolean }>`\n//   border-bottom: ${(props) => (props.isDone === false ? 15 : 0)} white;\n//   color: white;\n// `;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  border-radius: 50%;\n  border: none;\n  background-color: #01adb5;\n  margin-left: 10px;\n  i {\n    width: 100%;\n  }\n`;\n\nconst List = styled.li`\n  display: flex;\n  justify-content: flex-end;\n  margin: 15px;\n  align-items: center;\n  span {\n    font-size: 20px;\n  }\n`;\n\nfunction ToDo({ text, category, id }: IToDo) {\n  // const [isDone, setIsDone] = useState(false);\n  const setToDos = useSetRecoilState(toDoState);\n  //const toDosSave = useRecoilValue(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    // setIsDone((current) => !current);\n    setToDos((oldToDos) => {\n      const findIndex = oldToDos.findIndex((todo) => todo.id === id);\n      //const oldToDo = oldToDos[findIndex];\n      const newToDo = { id, text, category: name as IToDo[\"category\"] };\n      //console.log(oldToDo, newToDo);\n      const newToDos = [...oldToDos];\n      newToDos.splice(findIndex, 1, newToDo);\n      //console.log(newToDos);\n      //console.log(newToDo);\n      //console.log(oldToDos.splice(findIndex, 1, newToDo as any));\n      return newToDos;\n    });\n    //console.log(name);\n  };\n  //   useEffect(() => {\n  //     localStorage.setItem(USERTODOLIST_KEY, JSON.stringify(toDosSave));\n  //   }, [toDosSave]);\n  const deleteClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setToDos((oldToDos) => {\n      const findIndex = oldToDos.findIndex((todo) => todo.id === id);\n      return [\n        ...oldToDos.slice(0, findIndex),\n        ...oldToDos.slice(findIndex + 1),\n      ];\n    });\n  };\n  return (\n    <List>\n      <span>{text}</span>\n      {category !== Categories.TO_DO && (\n        <Button name={Categories.TO_DO} onClick={onClick}>\n          <i className=\"far fa-check-square\"></i>\n        </Button>\n      )}\n      {category !== Categories.DOING && (\n        <Button name={Categories.DOING} onClick={onClick}>\n          <i className=\"fas fa-hourglass-half\"></i>\n        </Button>\n      )}\n      {category !== Categories.DONE && (\n        <Button name={Categories.DONE} onClick={onClick}>\n          <i className=\"fas fa-check\"></i>\n        </Button>\n      )}\n      <Button name={Categories.DELETE} onClick={deleteClick}>\n        <i className=\"fas fa-trash-alt\"></i>\n      </Button>\n    </List>\n  );\n}\n\nexport default ToDo;\n","import React, { useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, toDoCate, toDoSelector } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nconst Container = styled.div`\n  max-width: 500px;\n  margin: 200px auto;\n  background-color: #3a3f47;\n  color: #eeeeee;\n  height: 600px;\n  border-radius: 15px;\n  border: 1px solid white;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst PlusButton = styled.button`\n  position: absolute;\n  margin-top: 450px;\n  padding: 10px;\n  border: none;\n  background-color: #eeeeee;\n  color: #3a3f47;\n  border-radius: 50%;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n`;\n\nconst Select = styled.select`\n  position: relative;\n  display: block;\n  width: 100%;\n  margin: 0 auto;\n  font-family: \"Open Sans\", \"Helvetica Neue\", \"Segoe UI\", \"Calibri\", \"Arial\",\n    sans-serif;\n  font-size: 18px;\n  color: #60666d;\n`;\n\nfunction ToDoList() {\n  // useEffect(() => {\n  //   const userGetTodo = localStorage.getItem(USERTODOLIST_KEY);\n  //   let toDosSave = useRecoilValue(toDoState);\n  //   console.log(userGetTodo, \"user임\");\n  //   if (localStorage.getItem(USERTODOLIST_KEY) !== null) {\n  //     const parseTodo = JSON.parse(userGetTodo as string);\n  //     toDosSave = parseTodo;\n  //     //console.log(\"paseTODO 임\", parseTodo);\n  //   }\n  //   return [\n  //     toDosSave.map((todo) => {\n  //       todo.id, todo.text, todo.category;\n  //     }),\n  //   ];\n  // }, [toDosSave]);\n\n  const toDos = useRecoilValue(toDoSelector);\n  const [addBtn, setAddBtn] = useState(false);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAddBtn((current) => !current);\n  };\n  const [category, setCategory] = useRecoilState(toDoCate);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    //console.log(event.currentTarget.value);\n    const {\n      currentTarget: { value },\n    } = event;\n    setCategory(value as any);\n  };\n  return (\n    <Container>\n      <Header>\n        <Form action=\"\">\n          <Select value={category} onInput={onInput}>\n            <option value={Categories.TO_DO}>To Do</option>\n            <option value={Categories.DOING}>Doing</option>\n            <option value={Categories.DONE}>Done</option>\n          </Select>\n        </Form>\n        <Title>ToDo List</Title>\n        {addBtn !== false && <CreateToDo />}\n      </Header>\n      <hr />\n      <Content>\n        <ul>\n          {toDos.map((toDo) => (\n            <ToDo key={toDo.id} {...toDo} />\n          ))}\n        </ul>\n        <PlusButton onClick={onClick}>\n          <i className=\"fas fa-plus\"></i>\n        </PlusButton>\n      </Content>\n    </Container>\n  );\n}\n\nexport default ToDoList;\n","import { Helmet } from \"react-helmet\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport ToDolist from \"./Components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n*{\n  box-sizing: border-box;\n}\na{\n  text-decoration: none;\n  color:inherit;\n}\n\nbody{\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: #232932;\n  color:black;\n  height: 78vh;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <Helmet>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://use.fontawesome.com/releases/v5.15.4/css/all.css\"\n          integrity=\"sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm\"\n          crossOrigin=\"anonymous\"\n        ></link>\n      </Helmet>\n      <GlobalStyle></GlobalStyle>\n      <ToDolist />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#7f8fa6\",\n  textColor: \"#353b48\",\n  accentColor: \"#e1b12c\",\n  plusColor: \"#A4F0A4\",\n  minusColor: \"#FE1F1F\",\n};\n"],"sourceRoot":""}